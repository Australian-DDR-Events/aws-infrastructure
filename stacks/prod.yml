AWSTemplateFormatVersion: 2010-09-09

Description: Production infrastructure used by AUS-DDR-Events

Parameters:
  S3IAMUsername:
    Description: Username for S3 IAM User
    NoEcho: true
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: >-
      Must be 1-64 characters and match [a-zA-Z0-9]+
# EcsAmiIds can be found here: https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html
  EcsAmiId:
    Type: String
    Description: Specifies the AMI ID for your container instances.
    Default: ami-08d31403aa8e81bb8
  EcsInstanceType:
    Type: CommaDelimitedList
    Description: >
      Specifies the EC2 instance type for your container instances.
      Defaults to t4g.nano
    Default: t4g.nano
    ConstraintDescription: must be a valid EC2 instance type.

Resources:
  AusDdrAssetsBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      BucketName: aus-ddr-events-bucket-prod
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
            AllowedOrigins:
              - https://ausddrevents-e18b1--ausddrevents-staging-e6gg8r0y.web.app/
              - https://ausddrevents.com/
              - http://localhost:1234/
            Id: public-visibility-cors-rule
            MaxAge: 3600

  S3IAMPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: AllowViewingOfBucket
          Effect: 'Allow'
          Action:
            - 's3:ListBucket'
          Resource:
            - Fn::GetAtt: AusDdrAssetsBucket.Arn
        - Sid: EnableBucketActions
          Effect: 'Allow'
          Action:
            - 's3:PutObject'
            - 's3:GetObject'
            - 's3:DeleteObject'
            - 's3:*Object*'
          Resource:
            - !Join
              - '/'
              - - Fn::GetAtt: AusDdrAssetsBucket.Arn
                - '*'
      PolicyName: S3ReadWrite
      Users:
        - !Ref S3IAMUser
    DependsOn:
      - S3IAMUser

  S3IAMUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: !Ref S3IAMUsername
    DependsOn:
      - AusDdrAssetsBucket

# VPC for ECS
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  PubSubnetAz1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: ap-southeast-2a
      MapPublicIpOnLaunch: true
  PubSubnetAz2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: ap-southeast-2b
      MapPublicIpOnLaunch: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  RouteViaIgw:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
  PublicRouteViaIgw:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteViaIgw
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PubSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubnetAz1
      RouteTableId: !Ref RouteViaIgw
  PubSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubnetAz2
      RouteTableId: !Ref RouteViaIgw

  EcsIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  EscIamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EcsIamRole


  EcsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ECS Allowed Ports
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIpv6: ::/0
  EcsInstanceLc:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref EcsAmiId
      InstanceType: !Select [ 0, !Ref EcsInstanceType ]
      AssociatePublicIpAddress: !Ref "AWS::NoValue"
      IamInstanceProfile: !Ref EscIamInstanceProfile
      KeyName: !Ref "AWS::NoValue"
      SecurityGroups:
        - !Ref EcsSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 22
            VolumeType: gp2
  EcsInstanceAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Sub "${PubSubnetAz1}"
      LaunchConfigurationName: !Ref EcsInstanceLc
      MinSize: 0
      MaxSize: 1
      DesiredCapacity: 1
      Tags:
        -
          Key: Name
          Value: !Sub "ECS Instance - ${AWS::StackName}"
          PropagateAtLaunch: true
        -
          Key: Description
          Value: "This instance is the part of the Auto Scaling group which was created through ECS Console"
          PropagateAtLaunch: true

  EcsCluster:
    Type: AWS::ECS::Cluster


Outputs:
  websiteUrl:
    Value:
      Fn::GetAtt: AusDdrAssetsBucket.WebsiteURL
    Export:
      Name: AusDdrAssetsBucketAddr
  httpsWebsiteUrl:
    Value: !Join
      - ''
      - - 'https://'
        - Fn::GetAtt: AusDdrAssetsBucket.DomainName
    Export:
      Name: HttpsAusDdrAssetsBucketAddr
  EcsInstanceAsgName:
    Description: Auto Scaling Group Name for ECS Instances
    Value: !Ref EcsInstanceAsg